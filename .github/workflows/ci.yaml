name: CI

on:
  push:
    branches: [ main ]
    tags: [ '*' ]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - uses: dtolnay/rust-toolchain@stable

      - name: Build
        run: cargo build --release

  cross-build:
    needs: [ build ]
    runs-on: ubuntu-latest

    strategy:
      matrix:
        module: [ supervisor, producer ]
        target: [ aarch64-unknown-linux-gnu ]
        include:
          - module: supervisor
            target: x86_64-unknown-linux-gnu
          - module: producer
            target: armv7-unknown-linux-gnueabihf

    steps:
      - uses: actions/checkout@v3.1.0

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ matrix.module }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.target }}-cargo-${{ matrix.module }}-

      - uses: dtolnay/rust-toolchain@stable

      - run: cargo install cross --force --git https://github.com/cross-rs/cross

      - name: Build
        run: cross build --release --target ${{ matrix.target }} --package ${{ matrix.module }}

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/${{ matrix.module }} ronitor_${{ matrix.module }}_${{ matrix.target }}

      - uses: actions/upload-artifact@v2
        with:
          name: ronitor_${{ matrix.module }}_${{ matrix.target }}
          path: ronitor_${{ matrix.module }}_${{ matrix.target }}

      - uses: alexellis/upload-assets@0.4.0
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["ronitor_${{ matrix.module }}_${{ matrix.target }}"]'

#  docker:
#    needs: build
#    runs-on: ubuntu-latest
#
#    permissions:
#      packages: write
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Docker meta
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: |
#            ghcr.io/${{ github.repository }}
#            marcelcoding/jitsi-openid
#          tags: |
#            type=edge
#            type=ref,event=pr
#            type=semver,pattern={{version}}
#            type=semver,pattern={{major}}.{{minor}}
#            type=semver,pattern={{major}}
#
#      # - uses: docker/setup-qemu-action@v2
#      - uses: docker/setup-buildx-action@v2
#
#      - name: Cache Docker layers
#        uses: actions/cache@v3
#        with:
#          path: /tmp/.buildx-cache
#          key: ${{ runner.os }}-buildx-${{ github.sha }}
#          restore-keys: |
#            ${{ runner.os }}-buildx-
#
#      - name: Login to GitHub Container Registry
#        uses: docker/login-action@v2
#        if: github.event_name != 'pull_request'
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ github.token }}
#
#      - name: Login to Docker Hub
#        uses: docker/login-action@v2
#        if: github.event_name != 'pull_request'
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_TOKEN }}
#
#      - name: Build
#        uses: docker/build-push-action@v3
#        with:
#          platforms: linux/amd64 #linux/arm64/v8,linux/arm/v7
#          push: ${{ github.event_name != 'pull_request' }}
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=local,src=/tmp/.buildx-cache
#          cache-to: type=local,dest=/tmp/.buildx-cache-new
#
#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
